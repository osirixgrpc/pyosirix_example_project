# See https://setuptools.pypa.io/ for more info on how to perform setup.
[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyosirix_example_project"
version = "0.0.1-dev.32"
description = "An example of a Python project that can be used to install into OsiriX"
authors = [
    { name = "Matthew D Blackledge", email = "matthew.blackledge@icr.ac.uk" }
]
maintainers = [
  {name = "Matthew D Blackledge", email = "mattyblackledge@gmail.com"}
]
readme = "docs/README.md"
license = {name = "MIT", file = "LICENSE.txt", url = "https://opensource.org/license/mit"}
keywords = [
    "Dicom",
    "Medical Imaging",
    "Image Processing",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: MacOS :: MacOS X",
]

# These dependencies are unpinned (i.e. define a range to be more flexible as a library).
dependencies = [
    "dvc>=3.55.2",       # General DVC library. Used for keeping track of all public datasets or models.
    "dvc-gs>=3.0.1",     # DVC Google cloud storage library. This may need to change depending on your storage solution.
    "Pillow>=10.4.0",    # Used for image processing.
    "grpcio>=1.66.1",    # Used to establish gRPC connections.
    "protobuf>=5.28.0",  # Used to understand the protocol buffer format (.proto files).
    "pyosirix==0.2.1b5", # Used to interact with OsiriX.
]

[tool.setuptools]
packages = ["pyosirix_example",
            "pyosirix_example.client",
            "pyosirix_example.server",
            "pyosirix_example.grpc_protocols",
            "pyosirix_example.utilities"]
include-package-data = true

# Include all necessary server data files in the package
[tool.setuptools.package-data]
pyosirix_example = ["server/data/*.dvc"]
